varying float LightIntensity;
varying vec3  MCposition;

uniform sampler3D Noise;

// non-standart initialization of uniforms.
// if this doesn't work, move them to the paramaters.

uniform vec3  LightWood = vec3(0.6, 0.3, 0.1);
uniform vec3  DarkWood = vec3(0.4, 0.2, 0.07);
uniform float RingFreq = 4.0;
uniform float LightGrains = 1.0;
uniform float DarkGrains = 0.0;
uniform float GrainThreshold = 0.5;
uniform vec3  NoiseScale = vec3(0.5, 0.1, 0.1);
uniform float Noisiness = 3.0;
uniform float GrainScale = 27.0;

void main()
{
    vec3 noisevec = vec3(texture3D(Noise, MCposition * NoiseScale) *
                                                 Noisiness);
    vec3 location = MCposition + noisevec;

    float dist = sqrt(location.x * location.x + location.z * location.z);
    dist *= RingFreq;

    float r = fract(dist + noisevec[0] + noisevec[1] + noisevec[2]) * 2.0;

    if (r > 1.0)
        r = 2.0 - r;

    vec3 color = mix(LightWood, DarkWood, r);

    r = fract((MCposition.x + MCposition.z) * GrainScale + 0.5);
    noisevec[2] *= r;
    if (r < GrainThreshold)
        color += LightWood * LightGrains * noisevec[2];
    else
        color -= LightWood * DarkGrains * noisevec[2];
    color *= LightIntensity;
    gl_FragColor = vec4(color, 1.0);
}
