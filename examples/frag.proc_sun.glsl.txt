varying float LightIntensity;
varying vec3  MCposition;

uniform sampler3D Noise;
uniform vec3 Color1;       // (0.8, 0.7, 0.0)
uniform vec3 Color2;       // (0.6, 0.1, 0.0)
uniform float NoiseScale;  // 1.2
uniform float time;
uniform float Scale;

void main()
{
    vec4 noisevec1 = texture3D(Noise, MCposition * Scale *
		(1.0 + 0.2 * sin(time)) );
    vec4 noisevec2 = texture3D(Noise, MCposition * Scale *
		(1.0 + 0.2 * cos(time)) );

    float intensity = abs(noisevec1[0] - 0.25) +
                      abs(noisevec2[1] - 0.125) +
                      abs(noisevec1[2] - 0.0625) +
                      abs(noisevec2[3] - 0.03125);

    intensity    = clamp(intensity * 6.0, 0.0, 1.0);
    vec3 color   = mix(Color1, Color2, intensity) * LightIntensity;
    gl_FragColor = vec4(color, 1.0);
}
 

